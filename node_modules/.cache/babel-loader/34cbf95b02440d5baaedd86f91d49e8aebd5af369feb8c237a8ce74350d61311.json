{"ast":null,"code":"var _jsxFileName = \"/Users/up2105/Downloads/conceptual-models/src/components/LeftSidebar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport categories from '../data/categories.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LeftSidebar({\n  models,\n  selectedModel\n}) {\n  _s();\n  const [supercategories, setSupercategories] = useState({});\n  const [expandedCategories, setExpandedCategories] = useState([]);\n  useEffect(() => {\n    // Map keywords to supercategories and related models\n    const categoryMap = {};\n    Object.keys(categories).forEach(keyword => {\n      const relatedModels = models.filter(model => model.keywords.includes(keyword));\n      categories[keyword].forEach(supercategory => {\n        if (!categoryMap[supercategory]) {\n          categoryMap[supercategory] = [];\n        }\n        const existingKeyword = categoryMap[supercategory].find(item => item.keyword === keyword);\n        if (!existingKeyword) {\n          categoryMap[supercategory].push({\n            keyword,\n            models: relatedModels\n          });\n        }\n      });\n    });\n    setSupercategories(categoryMap);\n  }, [models]);\n  useEffect(() => {\n    // Automatically expand categories that contain keywords from the selected model\n    if (selectedModel) {\n      const relevantCategories = Object.keys(supercategories).filter(category => supercategories[category].some(item => selectedModel.keywords.includes(item.keyword)));\n      setExpandedCategories(relevantCategories);\n    } else {\n      setExpandedCategories([]);\n    }\n  }, [selectedModel, supercategories]);\n  const toggleCategory = category => {\n    setExpandedCategories(prev => prev.includes(category) ? prev.filter(c => c !== category) : [...prev, category]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      color: '#ccc',\n      fontSize: '0.9rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        color: '#ccc',\n        fontSize: '1rem',\n        marginBottom: '0.5rem'\n      },\n      children: \"Categories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), Object.keys(supercategories).map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '0.5rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => toggleCategory(category),\n        style: {\n          cursor: 'pointer',\n          padding: '0.5rem',\n          backgroundColor: '#024731',\n          color: '#B2B2B2',\n          borderRadius: '3px',\n          fontWeight: expandedCategories.includes(category) ? 'bold' : 'normal'\n        },\n        children: category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), expandedCategories.includes(category) && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: '1rem',\n          marginTop: '0.5rem'\n        },\n        children: supercategories[category].map(({\n          keyword,\n          models\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '0.3rem',\n            fontWeight: selectedModel && selectedModel.keywords.includes(keyword) ? 'bold' : 'normal'\n          },\n          children: keyword\n        }, keyword, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this)]\n    }, category, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(LeftSidebar, \"Vrnl1Fk9RKfZpkyrxhR1qkIPemI=\");\n_c = LeftSidebar;\nvar _c;\n$RefreshReg$(_c, \"LeftSidebar\");","map":{"version":3,"names":["React","useState","useEffect","categories","jsxDEV","_jsxDEV","LeftSidebar","models","selectedModel","_s","supercategories","setSupercategories","expandedCategories","setExpandedCategories","categoryMap","Object","keys","forEach","keyword","relatedModels","filter","model","keywords","includes","supercategory","existingKeyword","find","item","push","relevantCategories","category","some","toggleCategory","prev","c","style","color","fontSize","children","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","cursor","padding","backgroundColor","borderRadius","fontWeight","marginLeft","marginTop","_c","$RefreshReg$"],"sources":["/Users/up2105/Downloads/conceptual-models/src/components/LeftSidebar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport categories from '../data/categories.json';\n\nexport default function LeftSidebar({ models, selectedModel }) {\n  const [supercategories, setSupercategories] = useState({});\n  const [expandedCategories, setExpandedCategories] = useState([]);\n\n  useEffect(() => {\n    // Map keywords to supercategories and related models\n    const categoryMap = {};\n\n    Object.keys(categories).forEach((keyword) => {\n      const relatedModels = models.filter((model) =>\n        model.keywords.includes(keyword)\n      );\n\n      categories[keyword].forEach((supercategory) => {\n        if (!categoryMap[supercategory]) {\n          categoryMap[supercategory] = [];\n        }\n\n        const existingKeyword = categoryMap[supercategory].find(\n          (item) => item.keyword === keyword\n        );\n\n        if (!existingKeyword) {\n          categoryMap[supercategory].push({ keyword, models: relatedModels });\n        }\n      });\n    });\n\n    setSupercategories(categoryMap);\n  }, [models]);\n\n  useEffect(() => {\n    // Automatically expand categories that contain keywords from the selected model\n    if (selectedModel) {\n      const relevantCategories = Object.keys(supercategories).filter((category) =>\n        supercategories[category].some((item) =>\n          selectedModel.keywords.includes(item.keyword)\n        )\n      );\n      setExpandedCategories(relevantCategories);\n    } else {\n      setExpandedCategories([]);\n    }\n  }, [selectedModel, supercategories]);\n\n  const toggleCategory = (category) => {\n    setExpandedCategories((prev) =>\n      prev.includes(category)\n        ? prev.filter((c) => c !== category)\n        : [...prev, category]\n    );\n  };\n\n  return (\n    <div style={{ color: '#ccc', fontSize: '0.9rem' }}>\n      <h3 style={{ color: '#ccc', fontSize: '1rem', marginBottom: '0.5rem' }}>\n        Categories\n      </h3>\n      {Object.keys(supercategories).map((category) => (\n        <div key={category} style={{ marginBottom: '0.5rem' }}>\n          <div\n            onClick={() => toggleCategory(category)}\n            style={{\n              cursor: 'pointer',\n              padding: '0.5rem',\n              backgroundColor: '#024731',\n              color: '#B2B2B2',\n              borderRadius: '3px',\n              fontWeight: expandedCategories.includes(category)\n                ? 'bold'\n                : 'normal',\n            }}\n          >\n            {category}\n          </div>\n          {expandedCategories.includes(category) && (\n            <div style={{ marginLeft: '1rem', marginTop: '0.5rem' }}>\n              {supercategories[category].map(({ keyword, models }) => (\n                <div\n                  key={keyword}\n                  style={{\n                    marginBottom: '0.3rem',\n                    fontWeight:\n                      selectedModel &&\n                      selectedModel.keywords.includes(keyword)\n                        ? 'bold'\n                        : 'normal',\n                  }}\n                >\n                  {keyword}\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}