{"ast":null,"code":"var _jsxFileName = \"/Users/up2105/Downloads/conceptual-models/src/components/RightSidebar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RightSidebar({\n  models,\n  selectedModel,\n  selectedKeyword,\n  onSelectModel\n}) {\n  _s();\n  const [filteredModels, setFilteredModels] = useState([]);\n  useEffect(() => {\n    if (selectedKeyword) {\n      const filtered = models.filter(model => model.keywords.includes(selectedKeyword));\n      setFilteredModels(filtered.sort((a, b) => a.name.localeCompare(b.name)));\n    } else {\n      const sortedModels = models.sort((a, b) => a.name.localeCompare(b.name));\n      if (selectedModel) {\n        setFilteredModels([selectedModel, ...sortedModels.filter(model => model.id !== selectedModel.id)]);\n      } else {\n        setFilteredModels(sortedModels);\n      }\n    }\n  }, [selectedKeyword, selectedModel, models]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"sidebar-title\",\n      children: selectedKeyword ? `Frameworks with \"${selectedKeyword}\"` : 'All Frameworks'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), filteredModels.length > 0 ? filteredModels.map(model => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => onSelectModel(model),\n      className: `framework-item ${(selectedModel === null || selectedModel === void 0 ? void 0 : selectedModel.id) === model.id ? 'selected-framework' : ''}`,\n      children: model.name\n    }, model.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-frameworks\",\n      children: \"No frameworks found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(RightSidebar, \"50lobcQTidNIJkBZ3r9oY1aIG3A=\");\n_c = RightSidebar;\nvar _c;\n$RefreshReg$(_c, \"RightSidebar\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","RightSidebar","models","selectedModel","selectedKeyword","onSelectModel","_s","filteredModels","setFilteredModels","filtered","filter","model","keywords","includes","sort","a","b","name","localeCompare","sortedModels","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","onClick","_c","$RefreshReg$"],"sources":["/Users/up2105/Downloads/conceptual-models/src/components/RightSidebar.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nexport default function RightSidebar({ models, selectedModel, selectedKeyword, onSelectModel }) {\n  const [filteredModels, setFilteredModels] = useState([]);\n\n  useEffect(() => {\n    if (selectedKeyword) {\n      const filtered = models.filter((model) =>\n        model.keywords.includes(selectedKeyword)\n      );\n      setFilteredModels(filtered.sort((a, b) => a.name.localeCompare(b.name)));\n    } else {\n      const sortedModels = models.sort((a, b) => a.name.localeCompare(b.name));\n      if (selectedModel) {\n        setFilteredModels([selectedModel, ...sortedModels.filter((model) => model.id !== selectedModel.id)]);\n      } else {\n        setFilteredModels(sortedModels);\n      }\n    }\n  }, [selectedKeyword, selectedModel, models]);\n\n  return (\n    <div className=\"sidebar-content\">\n      <h3 className=\"sidebar-title\">\n        {selectedKeyword ? `Frameworks with \"${selectedKeyword}\"` : 'All Frameworks'}\n      </h3>\n      {filteredModels.length > 0 ? (\n        filteredModels.map((model) => (\n          <div\n            key={model.id}\n            onClick={() => onSelectModel(model)}\n            className={`framework-item ${selectedModel?.id === model.id ? 'selected-framework' : ''}`}\n          >\n            {model.name}\n          </div>\n        ))\n      ) : (\n        <p className=\"no-frameworks\">No frameworks found.</p>\n      )}\n    </div>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,eAAe,SAASC,YAAYA,CAAC;EAAEC,MAAM;EAAEC,aAAa;EAAEC,eAAe;EAAEC;AAAc,CAAC,EAAE;EAAAC,EAAA;EAC9F,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAExDD,SAAS,CAAC,MAAM;IACd,IAAIO,eAAe,EAAE;MACnB,MAAMK,QAAQ,GAAGP,MAAM,CAACQ,MAAM,CAAEC,KAAK,IACnCA,KAAK,CAACC,QAAQ,CAACC,QAAQ,CAACT,eAAe,CACzC,CAAC;MACDI,iBAAiB,CAACC,QAAQ,CAACK,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,IAAI,CAACC,aAAa,CAACF,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;IAC1E,CAAC,MAAM;MACL,MAAME,YAAY,GAAGjB,MAAM,CAACY,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,IAAI,CAACC,aAAa,CAACF,CAAC,CAACC,IAAI,CAAC,CAAC;MACxE,IAAId,aAAa,EAAE;QACjBK,iBAAiB,CAAC,CAACL,aAAa,EAAE,GAAGgB,YAAY,CAACT,MAAM,CAAEC,KAAK,IAAKA,KAAK,CAACS,EAAE,KAAKjB,aAAa,CAACiB,EAAE,CAAC,CAAC,CAAC;MACtG,CAAC,MAAM;QACLZ,iBAAiB,CAACW,YAAY,CAAC;MACjC;IACF;EACF,CAAC,EAAE,CAACf,eAAe,EAAED,aAAa,EAAED,MAAM,CAAC,CAAC;EAE5C,oBACEF,OAAA;IAAKqB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BtB,OAAA;MAAIqB,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC1BlB,eAAe,GAAG,oBAAoBA,eAAe,GAAG,GAAG;IAAgB;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1E,CAAC,EACJnB,cAAc,CAACoB,MAAM,GAAG,CAAC,GACxBpB,cAAc,CAACqB,GAAG,CAAEjB,KAAK,iBACvBX,OAAA;MAEE6B,OAAO,EAAEA,CAAA,KAAMxB,aAAa,CAACM,KAAK,CAAE;MACpCU,SAAS,EAAE,kBAAkB,CAAAlB,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEiB,EAAE,MAAKT,KAAK,CAACS,EAAE,GAAG,oBAAoB,GAAG,EAAE,EAAG;MAAAE,QAAA,EAEzFX,KAAK,CAACM;IAAI,GAJNN,KAAK,CAACS,EAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKV,CACN,CAAC,gBAEF1B,OAAA;MAAGqB,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAC;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACrD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACpB,EAAA,CAvCuBL,YAAY;AAAA6B,EAAA,GAAZ7B,YAAY;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}