{"ast":null,"code":"var _jsxFileName = \"/Users/up2105/Downloads/conceptual-models/src/components/LeftSidebar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport categories from '../data/categories.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LeftSidebar({\n  models,\n  selectedModel,\n  onKeywordClick\n}) {\n  _s();\n  const [supercategories, setSupercategories] = useState({});\n  const [expandedCategories, setExpandedCategories] = useState([]);\n  useEffect(() => {\n    const categoryMap = {};\n\n    // Build a map of supercategories with their associated keywords and models\n    Object.keys(categories).forEach(keyword => {\n      const relatedModels = models.filter(model => model.keywords.includes(keyword));\n      categories[keyword].forEach(supercategory => {\n        if (!categoryMap[supercategory]) {\n          categoryMap[supercategory] = [];\n        }\n        const existingKeyword = categoryMap[supercategory].find(item => item.keyword === keyword);\n        if (!existingKeyword) {\n          categoryMap[supercategory].push({\n            keyword,\n            models: relatedModels\n          });\n        }\n      });\n    });\n\n    // Sort keywords within each supercategory alphabetically\n    const sortedCategoryMap = {};\n    Object.keys(categoryMap).sort((a, b) => a.localeCompare(b)).forEach(key => {\n      sortedCategoryMap[key] = categoryMap[key].sort((a, b) => a.keyword.localeCompare(b.keyword));\n    });\n    setSupercategories(sortedCategoryMap);\n  }, [models]);\n  useEffect(() => {\n    if (selectedModel) {\n      // Automatically expand categories that contain keywords of the selected model\n      const relevantCategories = Object.keys(supercategories).filter(category => supercategories[category].some(item => selectedModel.keywords.includes(item.keyword)));\n      setExpandedCategories(relevantCategories);\n    }\n  }, [selectedModel, supercategories]);\n  const toggleCategory = category => {\n    setExpandedCategories(prev => prev.includes(category) ? prev.filter(c => c !== category) : [...prev, category]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"sidebar-title\",\n      children: \"Keywords\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), Object.keys(supercategories).map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `category-item ${expandedCategories.includes(category) ? 'selected-keyword' : ''}`,\n        onClick: () => toggleCategory(category),\n        children: category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), expandedCategories.includes(category) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nested-keyword\",\n        children: supercategories[category].map(({\n          keyword\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `keyword-item ${selectedModel && selectedModel.keywords.includes(keyword) ? 'selected-keyword' : ''}`,\n          onClick: () => onKeywordClick(keyword),\n          children: keyword\n        }, keyword, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this)]\n    }, category, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(LeftSidebar, \"Vrnl1Fk9RKfZpkyrxhR1qkIPemI=\");\n_c = LeftSidebar;\nvar _c;\n$RefreshReg$(_c, \"LeftSidebar\");","map":{"version":3,"names":["React","useState","useEffect","categories","jsxDEV","_jsxDEV","LeftSidebar","models","selectedModel","onKeywordClick","_s","supercategories","setSupercategories","expandedCategories","setExpandedCategories","categoryMap","Object","keys","forEach","keyword","relatedModels","filter","model","keywords","includes","supercategory","existingKeyword","find","item","push","sortedCategoryMap","sort","a","b","localeCompare","key","relevantCategories","category","some","toggleCategory","prev","c","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","_c","$RefreshReg$"],"sources":["/Users/up2105/Downloads/conceptual-models/src/components/LeftSidebar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport categories from '../data/categories.json';\n\nexport default function LeftSidebar({ models, selectedModel, onKeywordClick }) {\n  const [supercategories, setSupercategories] = useState({});\n  const [expandedCategories, setExpandedCategories] = useState([]);\n\n  useEffect(() => {\n    const categoryMap = {};\n\n    // Build a map of supercategories with their associated keywords and models\n    Object.keys(categories).forEach((keyword) => {\n      const relatedModels = models.filter((model) =>\n        model.keywords.includes(keyword)\n      );\n\n      categories[keyword].forEach((supercategory) => {\n        if (!categoryMap[supercategory]) {\n          categoryMap[supercategory] = [];\n        }\n\n        const existingKeyword = categoryMap[supercategory].find(\n          (item) => item.keyword === keyword\n        );\n\n        if (!existingKeyword) {\n          categoryMap[supercategory].push({ keyword, models: relatedModels });\n        }\n      });\n    });\n\n    // Sort keywords within each supercategory alphabetically\n    const sortedCategoryMap = {};\n    Object.keys(categoryMap)\n      .sort((a, b) => a.localeCompare(b))\n      .forEach((key) => {\n        sortedCategoryMap[key] = categoryMap[key].sort((a, b) =>\n          a.keyword.localeCompare(b.keyword)\n        );\n      });\n\n    setSupercategories(sortedCategoryMap);\n  }, [models]);\n\n  useEffect(() => {\n    if (selectedModel) {\n      // Automatically expand categories that contain keywords of the selected model\n      const relevantCategories = Object.keys(supercategories).filter((category) =>\n        supercategories[category].some((item) =>\n          selectedModel.keywords.includes(item.keyword)\n        )\n      );\n      setExpandedCategories(relevantCategories);\n    }\n  }, [selectedModel, supercategories]);\n\n  const toggleCategory = (category) => {\n    setExpandedCategories((prev) =>\n      prev.includes(category)\n        ? prev.filter((c) => c !== category)\n        : [...prev, category]\n    );\n  };\n\n  return (\n    <div className=\"sidebar\">\n      <h3 className=\"sidebar-title\">Keywords</h3>\n      {Object.keys(supercategories).map((category) => (\n        <div key={category}>\n          <div\n            className={`category-item ${\n              expandedCategories.includes(category) ? 'selected-keyword' : ''\n            }`}\n            onClick={() => toggleCategory(category)}\n          >\n            {category}\n          </div>\n          {expandedCategories.includes(category) && (\n            <div className=\"nested-keyword\">\n              {supercategories[category].map(({ keyword }) => (\n                <div\n                  key={keyword}\n                  className={`keyword-item ${\n                    selectedModel && selectedModel.keywords.includes(keyword)\n                      ? 'selected-keyword'\n                      : ''\n                  }`}\n                  onClick={() => onKeywordClick(keyword)}\n                >\n                  {keyword}\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}