{"ast":null,"code":"import React,{useState,useEffect}from'react';import categories from'../data/categories.json';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function LeftSidebar(_ref){let{models,selectedModel,onKeywordClick}=_ref;const[supercategories,setSupercategories]=useState({});const[expandedCategories,setExpandedCategories]=useState([]);useEffect(()=>{const categoryMap={};// Build a map of supercategories with their associated keywords and models\nObject.keys(categories).forEach(keyword=>{const relatedModels=models.filter(model=>model.keywords.includes(keyword));categories[keyword].forEach(supercategory=>{if(!categoryMap[supercategory]){categoryMap[supercategory]=[];}const existingKeyword=categoryMap[supercategory].find(item=>item.keyword===keyword);if(!existingKeyword){categoryMap[supercategory].push({keyword,models:relatedModels});}});});// Sort keywords within each supercategory alphabetically\nconst sortedCategoryMap={};Object.keys(categoryMap).sort((a,b)=>a.localeCompare(b)).forEach(key=>{sortedCategoryMap[key]=categoryMap[key].sort((a,b)=>a.keyword.localeCompare(b.keyword));});setSupercategories(sortedCategoryMap);},[models]);useEffect(()=>{if(selectedModel){// Automatically expand categories that contain keywords of the selected model\nconst relevantCategories=Object.keys(supercategories).filter(category=>supercategories[category].some(item=>selectedModel.keywords.includes(item.keyword)));setExpandedCategories(relevantCategories);}},[selectedModel,supercategories]);const toggleCategory=category=>{setExpandedCategories(prev=>prev.includes(category)?prev.filter(c=>c!==category):[...prev,category]);};return/*#__PURE__*/_jsxs(\"div\",{className:\"sidebar\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"sidebar-title\",children:\"Keywords\"}),Object.keys(supercategories).map(category=>/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"category-item \".concat(expandedCategories.includes(category)?'selected-keyword':''),onClick:()=>toggleCategory(category),children:category}),expandedCategories.includes(category)&&/*#__PURE__*/_jsx(\"div\",{className:\"nested-keyword\",children:supercategories[category].map(_ref2=>{let{keyword}=_ref2;return/*#__PURE__*/_jsx(\"div\",{className:\"keyword-item \".concat(selectedModel&&selectedModel.keywords.includes(keyword)?'selected-keyword':''),onClick:()=>onKeywordClick(keyword),children:keyword},keyword);})})]},category))]});}","map":{"version":3,"names":["React","useState","useEffect","categories","jsx","_jsx","jsxs","_jsxs","LeftSidebar","_ref","models","selectedModel","onKeywordClick","supercategories","setSupercategories","expandedCategories","setExpandedCategories","categoryMap","Object","keys","forEach","keyword","relatedModels","filter","model","keywords","includes","supercategory","existingKeyword","find","item","push","sortedCategoryMap","sort","a","b","localeCompare","key","relevantCategories","category","some","toggleCategory","prev","c","className","children","map","concat","onClick","_ref2"],"sources":["/Users/up2105/Desktop/app/src/components/LeftSidebar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport categories from '../data/categories.json';\n\nexport default function LeftSidebar({ models, selectedModel, onKeywordClick }) {\n  const [supercategories, setSupercategories] = useState({});\n  const [expandedCategories, setExpandedCategories] = useState([]);\n\n  useEffect(() => {\n    const categoryMap = {};\n\n    // Build a map of supercategories with their associated keywords and models\n    Object.keys(categories).forEach((keyword) => {\n      const relatedModels = models.filter((model) =>\n        model.keywords.includes(keyword)\n      );\n\n      categories[keyword].forEach((supercategory) => {\n        if (!categoryMap[supercategory]) {\n          categoryMap[supercategory] = [];\n        }\n\n        const existingKeyword = categoryMap[supercategory].find(\n          (item) => item.keyword === keyword\n        );\n\n        if (!existingKeyword) {\n          categoryMap[supercategory].push({ keyword, models: relatedModels });\n        }\n      });\n    });\n\n    // Sort keywords within each supercategory alphabetically\n    const sortedCategoryMap = {};\n    Object.keys(categoryMap)\n      .sort((a, b) => a.localeCompare(b))\n      .forEach((key) => {\n        sortedCategoryMap[key] = categoryMap[key].sort((a, b) =>\n          a.keyword.localeCompare(b.keyword)\n        );\n      });\n\n    setSupercategories(sortedCategoryMap);\n  }, [models]);\n\n  useEffect(() => {\n    if (selectedModel) {\n      // Automatically expand categories that contain keywords of the selected model\n      const relevantCategories = Object.keys(supercategories).filter((category) =>\n        supercategories[category].some((item) =>\n          selectedModel.keywords.includes(item.keyword)\n        )\n      );\n      setExpandedCategories(relevantCategories);\n    }\n  }, [selectedModel, supercategories]);\n\n  const toggleCategory = (category) => {\n    setExpandedCategories((prev) =>\n      prev.includes(category)\n        ? prev.filter((c) => c !== category)\n        : [...prev, category]\n    );\n  };\n\n  return (\n    <div className=\"sidebar\">\n      <h3 className=\"sidebar-title\">Keywords</h3>\n      {Object.keys(supercategories).map((category) => (\n        <div key={category}>\n          <div\n            className={`category-item ${\n              expandedCategories.includes(category) ? 'selected-keyword' : ''\n            }`}\n            onClick={() => toggleCategory(category)}\n          >\n            {category}\n          </div>\n          {expandedCategories.includes(category) && (\n            <div className=\"nested-keyword\">\n              {supercategories[category].map(({ keyword }) => (\n                <div\n                  key={keyword}\n                  className={`keyword-item ${\n                    selectedModel && selectedModel.keywords.includes(keyword)\n                      ? 'selected-keyword'\n                      : ''\n                  }`}\n                  onClick={() => onKeywordClick(keyword)}\n                >\n                  {keyword}\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}